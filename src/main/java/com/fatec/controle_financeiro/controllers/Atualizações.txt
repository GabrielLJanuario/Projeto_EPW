codigo para Comitar:
git add .
git commit -m "Sua mensagem de commit"
git push origin main  # ou o branch que você estiver usando
teste
-----------------------------------------------------------------------------------------------------------
Aula 11/09/2024
Feito em aula :
Esta sendo corrigido o exercicio da da aula passada,
OBS:

-----------------------------------------------------------------------------------------------------------
Pontos a se fazer 
1-Em vez de armazenar fornecedores em uma lista em memória, você deve usar o FornecedorRepository para interagir com o banco de dados H2. Isso permitirá que os dados sejam persistentes e que a API funcione conforme o enunciado.
Exemplo de como integrar o repositório:

@Autowired
private FornecedorRepository fornecedorRepository;

// No método create
fornecedorRepository.save(fornecedor);

// No método getAllFornecedores
return new ResponseEntity<>(fornecedorRepository.findAll(), HttpStatus.OK);

2- Considere adicionar um tratamento de exceções global ou específico para lidar com erros de maneira mais robusta, como @ControllerAdvice para capturar e retornar erros de forma padronizada.


3-As operações de atualização e deleção devem usar o repositório para garantir que as operações sejam feitas no banco de dados e não apenas na lista em memória.
Exemplo:
@PutMapping("{id}")
public ResponseEntity<Fornecedor> updateFornecedor(@PathVariable int id, @RequestBody Fornecedor entity) {
    Optional<Fornecedor> fornecedorOpt = fornecedorRepository.findById(id);
    if (fornecedorOpt.isPresent()) {
        Fornecedor fornecedor = fornecedorOpt.get();
        fornecedor.setNome(entity.getNome());
        fornecedorRepository.save(fornecedor); // Salva no banco
        return new ResponseEntity<>(fornecedor, HttpStatus.OK);
    }
    return new ResponseEntity<>(HttpStatus.NOT_FOUND);
}
